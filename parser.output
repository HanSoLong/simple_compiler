Terminals unused in grammar

   '|'
   UMINUS


State 35 conflicts: 1 shift/reduce


Grammar

    0 $accept: p $end

    1 p: l
    2  | l p

    3 l: s ';'

    4 s: ID '=' t
    5  | '{' p '}'
    6  | IF c THEN s
    7  | IF c THEN s ELSE s
    8  | WHILE c DO s

    9 c: t '>' t
   10  | t '<' t
   11  | t '=' t

   12 t: f
   13  | t '*' f
   14  | t '/' f
   15  | t '+' f
   16  | t '-' f

   17 f: '(' t ')'
   18  | ID
   19  | INT8
   20  | INT10
   21  | INT16


Terminals, with rules where they appear

$end (0) 0
'(' (40) 17
')' (41) 17
'*' (42) 13
'+' (43) 15
'-' (45) 16
'/' (47) 14
';' (59) 3
'<' (60) 10
'=' (61) 4 11
'>' (62) 9
'{' (123) 5
'|' (124)
'}' (125) 5
error (256)
INT8 (258) 19
INT10 (259) 20
INT16 (260) 21
ID (261) 4 18
IF (262) 6 7
ELSE (263) 7
THEN (264) 6 7
WHILE (265) 8
DO (266) 8
UMINUS (267)


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
p (27)
    on left: 1 2, on right: 0 2 5
l (28)
    on left: 3, on right: 1 2
s (29)
    on left: 4 5 6 7 8, on right: 3 6 7 8
c (30)
    on left: 9 10 11, on right: 6 7 8
t (31)
    on left: 12 13 14 15 16, on right: 4 9 10 11 13 14 15 16 17
f (32)
    on left: 17 18 19 20 21, on right: 12 13 14 15 16


State 0

    0 $accept: . p $end

    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    '{'    shift, and go to state 4

    p  go to state 5
    l  go to state 6
    s  go to state 7


State 1

    4 s: ID . '=' t

    '='  shift, and go to state 8


State 2

    6 s: IF . c THEN s
    7  | IF . c THEN s ELSE s

    INT8   shift, and go to state 9
    INT10  shift, and go to state 10
    INT16  shift, and go to state 11
    ID     shift, and go to state 12
    '('    shift, and go to state 13

    c  go to state 14
    t  go to state 15
    f  go to state 16


State 3

    8 s: WHILE . c DO s

    INT8   shift, and go to state 9
    INT10  shift, and go to state 10
    INT16  shift, and go to state 11
    ID     shift, and go to state 12
    '('    shift, and go to state 13

    c  go to state 17
    t  go to state 15
    f  go to state 16


State 4

    5 s: '{' . p '}'

    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    '{'    shift, and go to state 4

    p  go to state 18
    l  go to state 6
    s  go to state 7


State 5

    0 $accept: p . $end

    $end  shift, and go to state 19


State 6

    1 p: l .
    2  | l . p

    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    '{'    shift, and go to state 4

    $default  reduce using rule 1 (p)

    p  go to state 20
    l  go to state 6
    s  go to state 7


State 7

    3 l: s . ';'

    ';'  shift, and go to state 21


State 8

    4 s: ID '=' . t

    INT8   shift, and go to state 9
    INT10  shift, and go to state 10
    INT16  shift, and go to state 11
    ID     shift, and go to state 12
    '('    shift, and go to state 13

    t  go to state 22
    f  go to state 16


State 9

   19 f: INT8 .

    $default  reduce using rule 19 (f)


State 10

   20 f: INT10 .

    $default  reduce using rule 20 (f)


State 11

   21 f: INT16 .

    $default  reduce using rule 21 (f)


State 12

   18 f: ID .

    $default  reduce using rule 18 (f)


State 13

   17 f: '(' . t ')'

    INT8   shift, and go to state 9
    INT10  shift, and go to state 10
    INT16  shift, and go to state 11
    ID     shift, and go to state 12
    '('    shift, and go to state 13

    t  go to state 23
    f  go to state 16


State 14

    6 s: IF c . THEN s
    7  | IF c . THEN s ELSE s

    THEN  shift, and go to state 24


State 15

    9 c: t . '>' t
   10  | t . '<' t
   11  | t . '=' t
   13 t: t . '*' f
   14  | t . '/' f
   15  | t . '+' f
   16  | t . '-' f

    '='  shift, and go to state 25
    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31


State 16

   12 t: f .

    $default  reduce using rule 12 (t)


State 17

    8 s: WHILE c . DO s

    DO  shift, and go to state 32


State 18

    5 s: '{' p . '}'

    '}'  shift, and go to state 33


State 19

    0 $accept: p $end .

    $default  accept


State 20

    2 p: l p .

    $default  reduce using rule 2 (p)


State 21

    3 l: s ';' .

    $default  reduce using rule 3 (l)


State 22

    4 s: ID '=' t .
   13 t: t . '*' f
   14  | t . '/' f
   15  | t . '+' f
   16  | t . '-' f

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29

    $default  reduce using rule 4 (s)


State 23

   13 t: t . '*' f
   14  | t . '/' f
   15  | t . '+' f
   16  | t . '-' f
   17 f: '(' t . ')'

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    ')'  shift, and go to state 34


State 24

    6 s: IF c THEN . s
    7  | IF c THEN . s ELSE s

    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    '{'    shift, and go to state 4

    s  go to state 35


State 25

   11 c: t '=' . t

    INT8   shift, and go to state 9
    INT10  shift, and go to state 10
    INT16  shift, and go to state 11
    ID     shift, and go to state 12
    '('    shift, and go to state 13

    t  go to state 36
    f  go to state 16


State 26

   15 t: t '+' . f

    INT8   shift, and go to state 9
    INT10  shift, and go to state 10
    INT16  shift, and go to state 11
    ID     shift, and go to state 12
    '('    shift, and go to state 13

    f  go to state 37


State 27

   16 t: t '-' . f

    INT8   shift, and go to state 9
    INT10  shift, and go to state 10
    INT16  shift, and go to state 11
    ID     shift, and go to state 12
    '('    shift, and go to state 13

    f  go to state 38


State 28

   13 t: t '*' . f

    INT8   shift, and go to state 9
    INT10  shift, and go to state 10
    INT16  shift, and go to state 11
    ID     shift, and go to state 12
    '('    shift, and go to state 13

    f  go to state 39


State 29

   14 t: t '/' . f

    INT8   shift, and go to state 9
    INT10  shift, and go to state 10
    INT16  shift, and go to state 11
    ID     shift, and go to state 12
    '('    shift, and go to state 13

    f  go to state 40


State 30

    9 c: t '>' . t

    INT8   shift, and go to state 9
    INT10  shift, and go to state 10
    INT16  shift, and go to state 11
    ID     shift, and go to state 12
    '('    shift, and go to state 13

    t  go to state 41
    f  go to state 16


State 31

   10 c: t '<' . t

    INT8   shift, and go to state 9
    INT10  shift, and go to state 10
    INT16  shift, and go to state 11
    ID     shift, and go to state 12
    '('    shift, and go to state 13

    t  go to state 42
    f  go to state 16


State 32

    8 s: WHILE c DO . s

    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    '{'    shift, and go to state 4

    s  go to state 43


State 33

    5 s: '{' p '}' .

    $default  reduce using rule 5 (s)


State 34

   17 f: '(' t ')' .

    $default  reduce using rule 17 (f)


State 35

    6 s: IF c THEN s .
    7  | IF c THEN s . ELSE s

    ELSE  shift, and go to state 44

    ELSE      [reduce using rule 6 (s)]
    $default  reduce using rule 6 (s)


State 36

   11 c: t '=' t .
   13 t: t . '*' f
   14  | t . '/' f
   15  | t . '+' f
   16  | t . '-' f

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29

    $default  reduce using rule 11 (c)


State 37

   15 t: t '+' f .

    $default  reduce using rule 15 (t)


State 38

   16 t: t '-' f .

    $default  reduce using rule 16 (t)


State 39

   13 t: t '*' f .

    $default  reduce using rule 13 (t)


State 40

   14 t: t '/' f .

    $default  reduce using rule 14 (t)


State 41

    9 c: t '>' t .
   13 t: t . '*' f
   14  | t . '/' f
   15  | t . '+' f
   16  | t . '-' f

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29

    $default  reduce using rule 9 (c)


State 42

   10 c: t '<' t .
   13 t: t . '*' f
   14  | t . '/' f
   15  | t . '+' f
   16  | t . '-' f

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29

    $default  reduce using rule 10 (c)


State 43

    8 s: WHILE c DO s .

    $default  reduce using rule 8 (s)


State 44

    7 s: IF c THEN s ELSE . s

    ID     shift, and go to state 1
    IF     shift, and go to state 2
    WHILE  shift, and go to state 3
    '{'    shift, and go to state 4

    s  go to state 45


State 45

    7 s: IF c THEN s ELSE s .

    $default  reduce using rule 7 (s)
